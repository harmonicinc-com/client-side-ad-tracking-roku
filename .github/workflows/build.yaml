name: build
on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "20.2.0"
      - name: Install dependencies
        working-directory: ./lib
        run: | 
          npm ci
          npm run ropm-ci
          npm run validate
  npm-release:
    #only run this task for version-tagged releases
    if: startsWith(github.ref, 'refs/tags/v')
    needs: ci
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Set Release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "20.2.0"
      - name: Copy README and LICENSE
        run: cp README.md LICENSE lib
      - name: Publish to npm
        working-directory: ./lib
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ./.npmrc
          npm version ${{env.RELEASE_VERSION}} --no-git-tag-version
          npm publish --access public
  publish-brs:
    #only run this task for version-tagged releases
    if: startsWith(github.ref, 'refs/tags/v')
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        working-directory: ./lib
        run: |
          npm ci
          npm run build
          tar -zcf out/hlit-rafx-ssai-brs.tar.gz out/.roku-deploy-staging
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: lib/out/hlit-rafx-ssai-brs.tar.gz
          tag: ${{ github.ref }}
          overwrite: true